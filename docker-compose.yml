networks:
  hms_network:
    driver: bridge

services:
  redis:
    image: redis:7.2.3-alpine
    container_name: hms_redis_prod
    networks:
      - hms_network
    restart: unless-stopped

  django:
    container_name: hms_django_prod
    build:
      context: ./hms
    command: >
      sh -c "
      sleep 10 &&
      python manage.py collectstatic --noinput --clear &&
      python manage.py migrate &&
      gunicorn hms.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - ./hms:/usr/src/app/
      - ./media:/usr/src/app/media
      - static_volume_prod:/usr/src/app/staticfiles
    expose:
      - "8000"
    environment:
      DEBUG: ${DEBUG:-0}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DATABASE_URL: ${DATABASE_URL}
      NAME: ${NAME}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      HOST: ${HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
      MODEL_SERVICE_URL: http://chatbot_api:8005
    depends_on:
      - redis
    networks:
      - hms_network
    restart: unless-stopped

  celery:
    container_name: hms_celery_prod
    build:
      context: ./hms
    command: >
      sh -c "
      sleep 15 &&
      celery -A hms worker --loglevel=INFO"
    volumes:
      - ./hms:/usr/src/app/
      - ./media:/usr/src/app/media
    environment:
      DEBUG: ${DEBUG:-0}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DATABASE_URL: ${DATABASE_URL}
      NAME: ${NAME}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      HOST: ${HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - redis
      - django
    networks:
      - hms_network
    restart: unless-stopped

  celery-beat:
    container_name: hms_celery_beat_prod
    build:
      context: ./hms
    command: >
      sh -c "
      sleep 20 &&
      celery -A hms beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./hms:/usr/src/app/
      - ./media:/usr/src/app/media
    environment:
      DEBUG: ${DEBUG:-0}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DATABASE_URL: ${DATABASE_URL}
      NAME: ${NAME}
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      HOST: ${HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CELERY_BROKER: redis://redis:6379/0
      CELERY_BACKEND: redis://redis:6379/0
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - redis
      - django
    networks:
      - hms_network
    restart: unless-stopped

  chatbot_api:
    container_name: hms_chatbot_api_prod
    build:
      context: ./fastapi
    command: uvicorn main:app --host 0.0.0.0 --port 8005
    ports:
      - "8005:8005"
    environment:
      GROQ_API_KEY: ${GROQ_API_KEY}
      HF_TOKEN: ${HF_TOKEN}
      DJANGO_API_URL: http://django:8000
    depends_on:
      - django
    networks:
      - hms_network
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    container_name: hms_nginx_prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume_prod:/usr/src/app/staticfiles:ro
      - ./media:/usr/src/app/media:ro
      - /dev/null:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    depends_on:
      - django
    networks:
      - hms_network
    restart: unless-stopped

volumes:
  static_volume_prod: